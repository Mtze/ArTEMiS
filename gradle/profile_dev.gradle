configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

def profiles = 'dev'
if (project.hasProperty('no-liquibase')) {
    profiles += ',no-liquibase'
}
if (project.hasProperty('tls')) {
    profiles += ',tls'
}

springBoot {
    buildInfo {
        properties {
            time = null
        }
    }
}

bootRun {
    args = []
}

// As client and server are separated in the docker setup webpackBuildDev task should not be executed
if(!project.hasProperty('docker') || project.property('docker') == 'no') {
    task webpackBuildDev(type: YarnTask, dependsOn: 'yarn_install') {
        inputs.dir("src/main/webapp/")

        def webpackDevFiles = fileTree("webpack//")
        webpackDevFiles.exclude("webpack.prod.js")
        inputs.files(webpackDevFiles)

        outputs.dir("build/resources/main/static/")

        args = ["run", "webpack:build"]
    }
}

processResources {
    filesMatching("**/application.yml") {
        filter {
            it.replace("#project.version#", version)
        }
        filter {
            it.replace("#spring.profiles.active#", profiles)
        }
    }
}

if(!project.hasProperty('docker') || project.property('docker') == 'no') {
    processResources.dependsOn webpackBuildDev
}
bootJar.dependsOn processResources
